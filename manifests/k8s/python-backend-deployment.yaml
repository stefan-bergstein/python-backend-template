---
# Service python-backend
apiVersion: v1
kind: Service
metadata:
  name: python-backend
  labels:
    backstage.io/kubernetes-id: ${{ values.component_id }}   
spec:
  selector:
    app: python-backend
  ports:
    - name: api
      protocol: TCP
      port: 8080
      targetPort: frontend
---
# Route
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: python-backend
spec:
  port:
    targetPort: api 
  to:
    kind: Service
    name: python-backend
---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-backend
  labels:
    backstage.io/kubernetes-id: ${{ values.component_id }}  
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: python-backend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: python-backend
        backstage.io/kubernetes-id: ${{ values.component_id }}
    spec:
      containers:
      - image: ${{ values.image_host }}/${{ values.image_organization }}/${{ values.image_name }}:${{ values.image_tag }}
        imagePullPolicy: Always
        name: python-backend
        ports:
        - containerPort: 8080
          name: frontend
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30


